[{"C:\\Users\\limov\\Desktop\\React\\wolt-2021-internship-assignment\\frontend\\src\\index.js":"1","C:\\Users\\limov\\Desktop\\React\\wolt-2021-internship-assignment\\frontend\\src\\App.js":"2","C:\\Users\\limov\\Desktop\\React\\wolt-2021-internship-assignment\\frontend\\src\\components\\Discovery.js":"3","C:\\Users\\limov\\Desktop\\React\\wolt-2021-internship-assignment\\frontend\\src\\components\\Section.js":"4","C:\\Users\\limov\\Desktop\\React\\wolt-2021-internship-assignment\\frontend\\src\\components\\Restaurant.js":"5"},{"size":194,"mtime":1611899552302,"results":"6","hashOfConfig":"7"},{"size":718,"mtime":1611930945119,"results":"8","hashOfConfig":"7"},{"size":304,"mtime":1611930648557,"results":"9","hashOfConfig":"7"},{"size":928,"mtime":1611987332055,"results":"10","hashOfConfig":"7"},{"size":826,"mtime":1611930912827,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"nnzuvv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\limov\\Desktop\\React\\wolt-2021-internship-assignment\\frontend\\src\\index.js",[],["25","26"],"C:\\Users\\limov\\Desktop\\React\\wolt-2021-internship-assignment\\frontend\\src\\App.js",["27"],"import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport { Discovery } from './components/Discovery'\nimport axios from 'axios'\n\nfunction App() {\n  const [data, setData] = useState()\n\n  const [query, setQuery] = useState('lat=60.1709&lon=24.941')\n  const url = `http://localhost:3001/api/discovery?${query}`\n\n  useEffect(() => {\n    const fechData = async () => {\n      axios\n        .get(url)\n        // .then((res) => res.json())\n        .then((resource) => setData(resource.data))\n        .catch((error) => console.error(error))\n    }\n    fechData()\n  }, [url])\n\n  return (\n    <div className='app'>\n      <h1> Wolt App</h1>\n      <Discovery {...{ data }} />\n    </div>\n  )\n}\n\nexport default App\n","C:\\Users\\limov\\Desktop\\React\\wolt-2021-internship-assignment\\frontend\\src\\components\\Discovery.js",[],"C:\\Users\\limov\\Desktop\\React\\wolt-2021-internship-assignment\\frontend\\src\\components\\Section.js",[],"C:\\Users\\limov\\Desktop\\React\\wolt-2021-internship-assignment\\frontend\\src\\components\\Restaurant.js",["28"],"import React from 'react'\r\nimport { Blurhash } from 'react-blurhash'\r\nimport './../App.css'\r\nimport { decode } from 'blurhash'\r\n\r\nfunction Restaurant({ restaurant }) {\r\n  return (\r\n    <div className='restaurant'>\r\n      {restaurant &&\r\n        [restaurant].map(\r\n          ({ blurhash, launch_date, location, name, online, popularity }) => (\r\n            <div>\r\n              <div>\r\n                <Blurhash\r\n                  hash={blurhash}\r\n                  width={300}\r\n                  height={300}\r\n                  resolutionX={32}\r\n                  resolutionY={32}\r\n                  punch={1}\r\n                />\r\n              </div>\r\n              <p>{name}</p>\r\n              <p>{online ? 'open' : 'closed'}</p>\r\n            </div>\r\n          )\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Restaurant\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":9,"column":17,"nodeType":"35","messageId":"36","endLine":9,"endColumn":25},{"ruleId":"33","severity":1,"message":"37","line":4,"column":10,"nodeType":"35","messageId":"36","endLine":4,"endColumn":16},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'setQuery' is assigned a value but never used.","Identifier","unusedVar","'decode' is defined but never used.","no-global-assign","no-unsafe-negation"]